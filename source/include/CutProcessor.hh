  /// \file CutProcessor.hh
/*
 *
 * CutProcessor.hh header template generated by fclass
 * Creation date : lun. mai 27 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef CUTPROCESSOR_HH
#define CUTPROCESSOR_HH


#include <iostream> 
#include <string> 
#include <cstdlib> 
#include <cmath> 
#include <vector> 
#include <algorithm>


#include "marlin/Processor.h"
#include "marlin/Exceptions.h"

// lcio includes
#include "IOIMPL/LCFactory.h"
#include "IO/LCWriter.h"
#include "EVENT/CalorimeterHit.h"


int IJKToKey( const int i , const int j , const int k );

std::vector<int> KeyToIJK( const int &key );


/**
 * Class CutProcessor
 * Inherits from base class marlin::Processor
 */
class CutProcessor : public marlin::Processor {

public:

	/**
	 * Default Constructor
	 */
	CutProcessor();

	/**
	 * Default Destructor
	 */
	virtual ~CutProcessor();


	virtual Processor *newProcessor()
		{ return new CutProcessor(); }

	/**
	 * @brief  Init the processor
	 */
	virtual void init();

	/**
	 * @brief  Process the run header.
	 */
	virtual void processRunHeader( EVENT::LCRunHeader* run  );

	/**
	 * @brief  Process an event
	 */
	virtual void processEvent( EVENT::LCEvent * );

	/**
	 * @brief  Check the event.
	 */
	virtual void check( EVENT::LCEvent * evt );

	/**
	 * @brief  Called after processing all the events.
	 */
	virtual void end();

	/**
	 * @brief Static function for std::sort() to sort the calo hit collection by increasing layer
	 */
	static bool SortByLayer( EVENT::CalorimeterHit *caloHit1 , EVENT::CalorimeterHit *caloHit2 );

	/**
	 * @brief Compute the fractal dimension
	 */
	double GetFractalDimension();

	/**
	 * @brief Helper for function for fractal dimension computation
	 */
	int NbOfHitsInCube( int cubeSize );


protected:

	std::string decoderString;
	std::string SDHCALCollectionName;
	std::vector<std::string> IJKEncoding;

	std::vector<CalorimeterHit*> caloHitCollection;

	int nbOfLayers;
	int nbOfCellSizeX;
	int nbOfCellSizeY;
	std::vector<int> nlayers;
	std::vector<int> NHit;
	std::vector<double> cog;
	double radius;
	double fractalDimension;
	int showerStartingLayer;
	int nbOfHitsInEdge;
	int nbOfHolesAfterStartingPoint;
	int nbOfHitsInCentralCells;


	// processor cut parameters. See ctor for info
	int cut1;
	double cut2;
	double cut3;
	int cut4;
	int cut5;
	double cut6;
	int cut7;
	double cut8;

};  // class 


#endif  //  CUTPROCESSOR_HH
